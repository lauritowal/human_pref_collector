{
    "item_type": "paper",
    "title": "A Sentimental Education: Sentiment Analysis Using Subjectivity Summarization Based On Minimum Cuts",
    "descriptions": [
        "**Abstract:**\n\nThis paper investigates the intersection of subjectivity detection and polarity classification in sentiment analysis, proposing an innovative method that compresses full-length reviews into shorter extracts while maintaining their sentiment information. By labeling sentences as subjective or objective and discarding the latter, the authors create subjectivity extracts that serve both as summaries and as refined data for polarity classification. The paper introduces a minimum cut-based approach to sentiment analysis that effectively incorporates contextual information between sentences, beyond the traditional bag-of-words features. This graph-based method utilizes maximum flow algorithms to efficiently compute minimum-cost cuts for subjectivity detection, leading to statistically significant improvements in polarity classification accuracy. Experimental results demonstrate that the subjectivity extracts generated through this method are not only more compact but also equal or superior in representing sentiment compared to the full reviews. The use of minimum cut formulations with contextual cues, such as sentence proximity and paragraph boundaries, further enhances the performance of sentiment analysis. The proposed techniques open up avenues for future research, including the development of parameter-selection strategies and the exploration of additional contextual information sources for sentiment analysis.",
        "**Abstract:**\n\nThis paper explores the intersection of subjectivity detection and sentiment polarity classification in the context of sentiment analysis. The authors propose a novel two-step process for analyzing sentiment in documents: initially identifying and summarizing subjective content by discarding objective sentences, followed by applying a standard machine learning classifier to the resulting subjective extract. This approach is shown to yield a more compact but accurate representation of sentiment information, with experiments demonstrating an increase in polarity classification accuracy from 82.8% to 86.4% or maintaining the same level of performance while retaining only 60% of the words in reviews.\n\nThe paper introduces a graph-based method to integrate sentence-level subjectivity detection and document-level polarity classification. This method employs a minimum cut formulation that leverages both individual sentence features and inter-sentential contextual information, resulting in efficient and intuitive sentiment analysis. The authors' experiments, conducted on a dataset of movie reviews, show that their subjectivity extraction algorithms create effective summaries that preserve the sentiment information of the full documents.\n\nFurthermore, the paper demonstrates that adding contextual constraints such as sentence proximity via the minimum-cut formalism can further improve the extraction process, yielding more informative summaries. The authors conclude that subjectivity detection and summarization based on minimum cuts offer a promising approach for sentiment analysis, with potential applications in information extraction, recommender systems, and editorial sites. Future research directions include developing techniques for parameter selection, incorporating diverse contextual cues, and finding alternative models for representing contextual information.",
        "**Abstract:**\n\nThis paper presents a novel approach to sentiment analysis that involves creating subjectivity extracts by labeling sentences within documents as either subjective or objective and discarding the latter. This pre-processing step allows for a more focused application of traditional machine learning classifiers to the extracts rather than the full text, leading to improved or maintained document polarity classification accuracy. The authors propose the use of a minimum cut formulation to integrate inter-sentence contextual information with traditional bag-of-words features, providing an efficient, intuitive, and effective means for sentiment analysis. Their experiments on movie reviews demonstrate that the subjectivity extracts not only compactly represent sentiment information but also enhance the performance of polarity classifiers. The use of the minimum-cut framework along with contextual information leads to statistically significant improvements in classification accuracy. The paper suggests future research directions, including the development of parameter-selection techniques, the incorporation of additional contextual cues, and further modeling considerations.",
        "**Abstract:**\n\nThis paper presents an innovative approach to sentiment analysis through a two-step process that involves subjectivity summarization based on minimum cuts. The first step labels sentences in a document as either subjective or objective, discarding the objective ones. The second step applies a standard machine learning classifier to the resulting subjective extract. The research demonstrates that these subjectivity extracts accurately represent sentiment, achieving statistically significant improvements in document polarity classification accuracy, or maintaining the same level of performance while reducing the review's length by 40%. The method incorporates inter-sentence level contextual information through a minimum cut formulation, which proves to be efficient, intuitive, and effective. The approach is evaluated using movie reviews, with experimental results showing that the utilization of subjectivity extracts provides a \"cleaner\" and more concise representation of document sentiment, which is particularly beneficial for polarity classification tasks. The paper also suggests future research directions, including the development of parameter selection techniques and the exploration of other contextual cues for sentiment analysis."
    ],
    "origin": "LLM",
    "llm_engine": "gpt-4-1106-preview",
    "generation_prompt_uid": "f6515836a5f002db341e24b70b624d9e",
    "generation_prompt_nickname": "write_xml_paper_abstract",
    "generation_prompt_text": "Read the following academic paper (in XML format) and create an abstract for it.\n\n---\n\n**Description:**\n\n<PAPER>\n  <S sid=\"0\">A Sentimental Education: Sentiment Analysis Using Subjectivity Summarization Based On Minimum Cuts</S>\n  <SECTION title=\"1 Introduction\" number=\"1\">\n    <S sid=\"4\" ssid=\"1\">The computational treatment of opinion, sentiment, and subjectivity has recently attracted a great deal of attention (see references), in part because of its potential applications.</S>\n    <S sid=\"5\" ssid=\"2\">For instance, informationextraction and question-answering systems could flag statements and queries regarding opinions rather than facts (Cardie et al., 2003).</S>\n    <S sid=\"6\" ssid=\"3\">Also, it has proven useful for companies, recommender systems, and editorial sites to create summaries of people’s experiences and opinions that consist of subjective expressions extracted from reviews (as is commonly done in movie ads) or even just a review’s polarity — positive (“thumbs up”) or negative (“thumbs down”).</S>\n    <S sid=\"7\" ssid=\"4\">Document polarity classification poses a significant challenge to data-driven methods, resisting traditional text-categorization techniques (Pang, Lee, and Vaithyanathan, 2002).</S>\n    <S sid=\"8\" ssid=\"5\">Previous approaches focused on selecting indicative lexical features (e.g., the word “good”), classifying a document according to the number of such features that occur anywhere within it.</S>\n    <S sid=\"9\" ssid=\"6\">In contrast, we propose the following process: (1) label the sentences in the document as either subjective or objective, discarding the latter; and then (2) apply a standard machine-learning classifier to the resulting extract.</S>\n    <S sid=\"10\" ssid=\"7\">This can prevent the polarity classifier from considering irrelevant or even potentially misleading text: for example, although the sentence “The protagonist tries to protect her good name” contains the word “good”, it tells us nothing about the author’s opinion and in fact could well be embedded in a negative movie review.</S>\n    <S sid=\"11\" ssid=\"8\">Also, as mentioned above, subjectivity extracts can be provided to users as a summary of the sentiment-oriented content of the document.</S>\n    <S sid=\"12\" ssid=\"9\">Our results show that the subjectivity extracts we create accurately represent the sentiment information of the originating documents in a much more compact form: depending on choice of downstream polarity classifier, we can achieve highly statistically significant improvement (from 82.8% to 86.4%) or maintain the same level of performance for the polarity classification task while retaining only 60% of the reviews’ words.</S>\n    <S sid=\"13\" ssid=\"10\">Also, we explore extraction methods based on a minimum cut formulation, which provides an efficient, intuitive, and effective means for integrating inter-sentencelevel contextual information with traditional bag-ofwords features.</S>\n  </SECTION>\n  <SECTION title=\"2 Method\" number=\"2\">\n    <S sid=\"14\" ssid=\"1\">One can consider document-level polarity classification to be just a special (more difficult) case of text categorization with sentiment- rather than topic-based categories.</S>\n    <S sid=\"15\" ssid=\"2\">Hence, standard machinelearning classification techniques, such as support vector machines (SVMs), can be applied to the entire documents themselves, as was done by Pang, Lee, and Vaithyanathan (2002).</S>\n    <S sid=\"16\" ssid=\"3\">We refer to such classification techniques as default polarity classifiers.</S>\n    <S sid=\"17\" ssid=\"4\">However, as noted above, we may be able to improve polarity classification by removing objective sentences (such as plot summaries in a movie review).</S>\n    <S sid=\"18\" ssid=\"5\">We therefore propose, as depicted in Figure 1, to first employ a subjectivity detector that determines whether each sentence is subjective or not: discarding the objective ones creates an extract that should better represent a review’s subjective content to a default polarity classifier.</S>\n    <S sid=\"19\" ssid=\"6\">To our knowledge, previous work has not integrated sentence-level subjectivity detection with document-level sentiment polarity.</S>\n    <S sid=\"20\" ssid=\"7\">Yu and Hatzivassiloglou (2003) provide methods for sentencelevel analysis and for determining whether a document is subjective or not, but do not combine these two types of algorithms or consider document polarity classification.</S>\n    <S sid=\"21\" ssid=\"8\">The motivation behind the singlesentence selection method of Beineke et al. (2004) is to reveal a document’s sentiment polarity, but they do not evaluate the polarity-classification accuracy that results.</S>\n    <S sid=\"22\" ssid=\"9\">As with document-level polarity classification, we could perform subjectivity detection on individual sentences by applying a standard classification algorithm on each sentence in isolation.</S>\n    <S sid=\"23\" ssid=\"10\">However, modeling proximity relationships between sentences would enable us to leverage coherence: text spans occurring near each other (within discourse boundaries) may share the same subjectivity status, other things being equal (Wiebe, 1994).</S>\n    <S sid=\"24\" ssid=\"11\">We would therefore like to supply our algorithms with pair-wise interaction information, e.g., to specify that two particular sentences should ideally receive the same subjectivity label but not state which label this should be.</S>\n    <S sid=\"25\" ssid=\"12\">Incorporating such information is somewhat unnatural for classifiers whose input consists simply of individual feature vectors, such as Naive Bayes or SVMs, precisely because such classifiers label each test item in isolation.</S>\n    <S sid=\"26\" ssid=\"13\">One could define synthetic features or feature vectors to attempt to overcome this obstacle.</S>\n    <S sid=\"27\" ssid=\"14\">However, we propose an alternative that avoids the need for such feature engineering: we use an efficient and intuitive graph-based formulation relying on finding minimum cuts.</S>\n    <S sid=\"28\" ssid=\"15\">Our approach is inspired by Blum and Chawla (2001), although they focused on similarity between items (the motivation being to combine labeled and unlabeled data), whereas we are concerned with physical proximity between the items to be classified; indeed, in computer vision, modeling proximity information via graph cuts has led to very effective classification (Boykov, Veksler, and Zabih, 1999).</S>\n    <S sid=\"29\" ssid=\"16\">Figure 2 shows a worked example of the concepts in this section.</S>\n    <S sid=\"30\" ssid=\"17\">Suppose we have n items x1, ... , xn to divide into two classes C1 and C2, and we have access to two types of information: We would like to maximize each item’s “net happiness”: its individual score for the class it is assigned to, minus its individual score for the other class.</S>\n    <S sid=\"31\" ssid=\"18\">But, we also want to penalize putting tightlyassociated items into different classes.</S>\n    <S sid=\"32\" ssid=\"19\">Thus, after some algebra, we arrive at the following optimization problem: assign the xis to C1 and C2 so as to minimize the partition cost The problem appears intractable, since there are 2n possible binary partitions of the xi’s.</S>\n    <S sid=\"33\" ssid=\"20\">However, suppose we represent the situation in the following manner.</S>\n    <S sid=\"34\" ssid=\"21\">Build an undirected graph G with vertices {v1, ... , vn, s, t}; the last two are, respectively, the source and sink.</S>\n    <S sid=\"35\" ssid=\"22\">Add n edges (s, vi), each with weight ind1(xi), and n edges (vi, t), each with weight ind2(xi).</S>\n    <S sid=\"36\" ssid=\"23\">Finally, add (n ) edges (vi, vk), each with weight assoc(xi, xk).</S>\n    <S sid=\"37\" ssid=\"24\">Then, cuts in G are defined as follows: Definition 1 A cut (S, T) of G is a partition of its nodes into sets S = {s} U S0 and T = {t} U T0, where s ∈� S0, t ∈� T0.</S>\n    <S sid=\"38\" ssid=\"25\">Its cost cost(S, T) is the sum of the weights of all edges crossing from S to T. A minimum cut of G is one of minimum cost.</S>\n    <S sid=\"39\" ssid=\"26\">Observe that every cut corresponds to a partition of the items and has cost equal to the partition cost.</S>\n    <S sid=\"40\" ssid=\"27\">Thus, our optimization problem reduces to finding minimum cuts.</S>\n    <S sid=\"41\" ssid=\"28\">Practical advantages As we have noted, formulating our subjectivity-detection problem in terms of graphs allows us to model item-specific and pairwise information independently.</S>\n    <S sid=\"42\" ssid=\"29\">Note that this is a very flexible paradigm.</S>\n    <S sid=\"43\" ssid=\"30\">For instance, it is perfectly legitimate to use knowledge-rich algorithms employing deep linguistic knowledge about sentiment indicators to derive the individual scores.</S>\n    <S sid=\"44\" ssid=\"31\">And we could also simultaneously use knowledgelean methods to assign the association scores.</S>\n    <S sid=\"45\" ssid=\"32\">Interestingly, Yu and Hatzivassiloglou (2003) compared an individual-preference classifier against a relationship-based method, but didn’t combine the two; the ability to coordinate such algorithms is precisely one of the strengths of our approach.</S>\n    <S sid=\"46\" ssid=\"33\">But a crucial advantage specific to the utilization of a minimum-cut-based approach is that we can use maximumfflow algorithms with polynomial asymptotic running times — and near-linear running times in practice — to exactly compute the minimumcost cut(s), despite the apparent intractability of the optimization problem (Cormen, Leiserson, and Rivest, 1990; Ahuja, Magnanti, and Orlin, 1993).2 In contrast, other graph-partitioning problems that have been previously used to formulate NLP classification problems3 are NP-complete (Hatzivassiloglou and McKeown, 1997; Agrawal et al., 2003; Joachims, 2003).</S>\n  </SECTION>\n  <SECTION title=\"3 Evaluation Framework\" number=\"3\">\n    <S sid=\"47\" ssid=\"1\">Our experiments involve classifying movie reviews as either positive or negative, an appealing task for several reasons.</S>\n    <S sid=\"48\" ssid=\"2\">First, as mentioned in the introduction, providing polarity information about reviews is a useful service: witness the popularity of www.rottentomatoes.com.</S>\n    <S sid=\"49\" ssid=\"3\">Second, movie reviews are apparently harder to classify than reviews of other products (Turney, 2002; Dave, Lawrence, and Pennock, 2003).</S>\n    <S sid=\"50\" ssid=\"4\">Third, the correct label can be extracted automatically from rating information (e.g., number of stars).</S>\n    <S sid=\"51\" ssid=\"5\">Our data4 contains 1000 positive and 1000 negative reviews all written before 2002, with a cap of 20 reviews per author (312 authors total) per category.</S>\n    <S sid=\"52\" ssid=\"6\">We refer to this corpus as the polarity dataset.</S>\n    <S sid=\"53\" ssid=\"7\">Default polarity classifiers We tested support vector machines (SVMs) and Naive Bayes (NB).</S>\n    <S sid=\"54\" ssid=\"8\">Following Pang et al. (2002), we use unigram-presence features: the ith coordinate of a feature vector is 1 if the corresponding unigram occurs in the input text, 0 otherwise.</S>\n    <S sid=\"55\" ssid=\"9\">(For SVMs, the feature vectors are length-normalized).</S>\n    <S sid=\"56\" ssid=\"10\">Each default documentlevel polarity classifier is trained and tested on the extracts formed by applying one of the sentencelevel subjectivity detectors to reviews in the polarity dataset.</S>\n    <S sid=\"57\" ssid=\"11\">Subjectivity dataset To train our detectors, we need a collection of labeled sentences.</S>\n    <S sid=\"58\" ssid=\"12\">Riloff and Wiebe (2003) state that “It is [very hard] to obtain collections of individual sentences that can be easily identified as subjective or objective”; the polarity-dataset sentences, for example, have not been so annotated.5 Fortunately, we were able to mine the Web to create a large, automaticallylabeled sentence corpus6.</S>\n    <S sid=\"59\" ssid=\"13\">To gather subjective sentences (or phrases), we collected 5000 moviereview snippets (e.g., “bold, imaginative, and impossible to resist”) from www.rottentomatoes.com.</S>\n    <S sid=\"60\" ssid=\"14\">To obtain (mostly) objective data, we took 5000 sentences from plot summaries available from the Internet Movie Database (www.imdb.com).</S>\n    <S sid=\"61\" ssid=\"15\">We only selected sentences or snippets at least ten words long and drawn from reviews or plot summaries of movies released post-2001, which prevents overlap with the polarity dataset.</S>\n    <S sid=\"62\" ssid=\"16\">Subjectivity detectors As noted above, we can use our default polarity classifiers as “basic” sentencelevel subjectivity detectors (after retraining on the subjectivity dataset) to produce extracts of the original reviews.</S>\n    <S sid=\"63\" ssid=\"17\">We also create a family of cut-based subjectivity detectors; these take as input the set of sentences appearing in a single document and determine the subjectivity status of all the sentences simultaneously using per-item and pairwise relationship information.</S>\n    <S sid=\"64\" ssid=\"18\">Specifically, for a given document, we use the construction in Section 2.2 to build a graph wherein the source s and sink t correspond to the class of subjective and objective sentences, respectively, and each internal node vi corresponds to the document’s ith sentence si.</S>\n    <S sid=\"65\" ssid=\"19\">We can set the individual scores ind1(si) to PrNB sub (si) and ind2(si) to 1 − PrNB sub (si), as shown in Figure 3, where PrNB sub (s) denotes Naive Bayes’ estimate of the probability that sentence s is subjective; or, we can use the weights produced by the SVM classifier instead.7 If we set all the association scores to zero, then the minimum-cut classification of the sentences is the same as that of the basic subjectivity detector.</S>\n    <S sid=\"66\" ssid=\"20\">Alternatively, we incorporate the degree of proximity between pairs of sentences, controlled by three parameters.</S>\n    <S sid=\"67\" ssid=\"21\">The threshold T specifies the maximum distance two sentences can be separated by and still be considered proximal.</S>\n    <S sid=\"68\" ssid=\"22\">The and ind2(si) = 1 − ind1(si).</S>\n    <S sid=\"69\" ssid=\"23\">Note that scaling is employed only for consistency; the algorithm itself does not require probabilities for individual scores. non-increasing function f(d) specifies how the influence of proximal sentences decays with respect to distance d; in our experiments, we tried f(d) = 1, e1−d, and 1/d2.</S>\n    <S sid=\"70\" ssid=\"24\">The constant c controls the relative influence of the association scores: a larger c makes the minimum-cut algorithm more loath to put proximal sentences in different classes.</S>\n    <S sid=\"71\" ssid=\"25\">With these in hand8, we set (for j &gt; i)</S>\n  </SECTION>\n  <SECTION title=\"4 Experimental Results\" number=\"4\">\n    <S sid=\"72\" ssid=\"1\">Below, we report average accuracies computed by ten-fold cross-validation over the polarity dataset.</S>\n    <S sid=\"73\" ssid=\"2\">Section 4.1 examines our basic subjectivity extraction algorithms, which are based on individualsentence predictions alone.</S>\n    <S sid=\"74\" ssid=\"3\">Section 4.2 evaluates the more sophisticated form of subjectivity extraction that incorporates context information via the minimum-cut paradigm.</S>\n    <S sid=\"75\" ssid=\"4\">As we will see, the use of subjectivity extracts can in the best case provide satisfying improvement in polarity classification, and otherwise can at least yield polarity-classification accuracies indistinguishable from employing the full review.</S>\n    <S sid=\"76\" ssid=\"5\">At the same time, the extracts we create are both smaller on average than the original document and more effective as input to a default polarity classifier than the same-length counterparts produced by standard summarization tactics (e.g., first- or last-N sentences).</S>\n    <S sid=\"77\" ssid=\"6\">We therefore conclude that subjectivity extraction produces effective summaries of document sentiment.</S>\n    <S sid=\"78\" ssid=\"7\">As noted in Section 3, both Naive Bayes and SVMs can be trained on our subjectivity dataset and then used as a basic subjectivity detector.</S>\n    <S sid=\"79\" ssid=\"8\">The former has somewhat better average ten-fold cross-validation performance on the subjectivity dataset (92% vs. 90%), and so for space reasons, our initial discussions will focus on the results attained via NB subjectivity detection.</S>\n    <S sid=\"80\" ssid=\"9\">Employing Naive Bayes as a subjectivity detector (ExtractNB) in conjunction with a Naive Bayes document-level polarity classifier achieves 86.4% accuracy.9 This is a clear improvement over the 82.8% that results when no extraction is applied (Full review); indeed, the difference is highly statistically significant (p &lt; 0.01, paired t-test).</S>\n    <S sid=\"81\" ssid=\"10\">With SVMs as the polarity classifier instead, the Full review performance rises to 87.15%, but comparison via the paired t-test reveals that this is statistically indistinguishable from the 86.4% that is achieved by running the SVM polarity classifier on ExtractNB input.</S>\n    <S sid=\"82\" ssid=\"11\">(More improvements to extraction performance are reported later in this section.)</S>\n    <S sid=\"83\" ssid=\"12\">These findings indicate10 that the extracts preserve (and, in the NB polarity-classifier case, apparently clarify) the sentiment information in the originating documents, and thus are good summaries from the polarity-classification point of view.</S>\n    <S sid=\"84\" ssid=\"13\">Further support comes from a “flipping” experiment: if we give as input to the default polarity classifier an extract consisting of the sentences labeled objective, accuracy drops dramatically to 71% for NB and 67% for SVMs.</S>\n    <S sid=\"85\" ssid=\"14\">This confirms our hypothesis that sentences discarded by the subjectivity extraction process are indeed much less indicative of sentiment polarity.</S>\n    <S sid=\"86\" ssid=\"15\">Moreover, the subjectivity extracts are much more compact than the original documents (an important feature for a summary to have): they contain on average only about 60% of the source reviews’ words.</S>\n    <S sid=\"87\" ssid=\"16\">(This word preservation rate is plotted along the x-axis in the graphs in Figure 5.)</S>\n    <S sid=\"88\" ssid=\"17\">This prompts us to study how much reduction of the original documents subjectivity detectors can perform and still accurately represent the texts’ sentiment information.</S>\n    <S sid=\"89\" ssid=\"18\">We can create subjectivity extracts of varying lengths by taking just the N most subjective sentences11 from the originating review.</S>\n    <S sid=\"90\" ssid=\"19\">As one base10Recall that direct evidence is not available because the polarity dataset’s sentences lack subjectivity labels.</S>\n    <S sid=\"91\" ssid=\"20\">11These are the N sentences assigned the highest probability by the basic NB detector, regardless of whether their probabilline to compare against, we take the canonical summarization standard of extracting the first N sentences — in general settings, authors often begin documents with an overview.</S>\n    <S sid=\"92\" ssid=\"21\">We also consider the last N sentences: in many documents, concluding material may be a good summary, and www.rottentomatoes.com tends to select “snippets” from the end of movie reviews (Beineke et al., 2004).</S>\n    <S sid=\"93\" ssid=\"22\">Finally, as a sanity check, we include results from the N least subjective sentences according to Naive Bayes.</S>\n    <S sid=\"94\" ssid=\"23\">Figure 4 shows the polarity classifier results as N ranges between 1 and 40.</S>\n    <S sid=\"95\" ssid=\"24\">Our first observation is that the NB detector provides very good “bang for the buck”: with subjectivity extracts containing as few as 15 sentences, accuracy is quite close to what one gets if the entire review is used.</S>\n    <S sid=\"96\" ssid=\"25\">In fact, for the NB polarity classifier, just using the 5 most subjective sentences is almost as informative as the Full review while containing on average only about 22% of the source reviews’ words.</S>\n    <S sid=\"97\" ssid=\"26\">Also, it so happens that at N = 30, performance is actually slightly better than (but statistically indistinguishable from) Full review even when the SVM default polarity classifier is used (87.2% vs. 87.15%).12 This suggests potentially effective extraction alternatives other than using a fixed probability threshold (which resulted in the lower accuracy of 86.4% reported above).</S>\n    <S sid=\"98\" ssid=\"27\">Furthermore, we see in Figure 4 that the N mostsubjective-sentences method generally outperforms the other baseline summarization methods (which perhaps suggests that sentiment summarization cannot be treated the same as topic-based summarization, although this conjecture would need to be verified on other domains and data).</S>\n    <S sid=\"99\" ssid=\"28\">It’s also interesting to observe how much better the last N sentences are than the first N sentences; this may reflect a (hardly surprising) tendency for movie-review authors to place plot descriptions at the beginning rather than the end of the text and conclude with overtly opinionated statements.</S>\n    <S sid=\"100\" ssid=\"29\">The previous section demonstrated the value of subjectivity detection.</S>\n    <S sid=\"101\" ssid=\"30\">We now examine whether context information, particularly regarding sentence proximity, can further improve subjectivity extraction.</S>\n    <S sid=\"102\" ssid=\"31\">As discussed in Section 2.2 and 3, contextual constraints are easily incorporated via the minimum-cut formalism but are not natural inputs for standard Naive Bayes and SVMs.</S>\n    <S sid=\"103\" ssid=\"32\">Figure 5 shows the effect of adding in proximity information.</S>\n    <S sid=\"104\" ssid=\"33\">ExtractNB+Prox and ExtractSVM+Prox are the graph-based subjectivity detectors using Naive Bayes and SVMs, respectively, for the individual scores; we depict the best performance achieved by a single setting of the three proximity-related edge-weight parameters over all ten data folds13 (parameter selection was not a focus of the current work).</S>\n    <S sid=\"105\" ssid=\"34\">The two comparisons we are most interested in are ExtractNB+Prox versus ExtractNB and ExtractSVM+Prox versus ExtractSVM.</S>\n    <S sid=\"106\" ssid=\"35\">We see that the context-aware graph-based subjectivity detectors tend to create extracts that are more informative (statistically significant so (paired t-test) for SVM subjectivity detectors only), although these extracts are longer than their contextblind counterparts.</S>\n    <S sid=\"107\" ssid=\"36\">We note that the performance 13Parameters are chosen from T E {1, 2, 3}, f(d) E {1, e1−d, 1/d2}, and c E [0, 1] at intervals of 0.1. enhancements cannot be attributed entirely to the mere inclusion of more sentences regardless of whether they are subjective or not — one counterargument is that Full review yielded substantially worse results for the NB default polarity classifier— and at any rate, the graph-derived extracts are still substantially more concise than the full texts.</S>\n    <S sid=\"108\" ssid=\"37\">Now, while incorporating a bias for assigning nearby sentences to the same category into NB and SVM subjectivity detectors seems to require some non-obvious feature engineering, we also wish to investigate whether our graph-based paradigm makes better use of contextual constraints that can be (more or less) easily encoded into the input of standard classifiers.</S>\n    <S sid=\"109\" ssid=\"38\">For illustrative purposes, we consider paragraph-boundary information, looking only at SVM subjectivity detection for simplicity’s sake.</S>\n    <S sid=\"110\" ssid=\"39\">It seems intuitively plausible that paragraph boundaries (an approximation to discourse boundaries) loosen coherence constraints between nearby sentences.</S>\n    <S sid=\"111\" ssid=\"40\">To capture this notion for minimum-cutbased classification, we can simply reduce the association scores for all pairs of sentences that occur in different paragraphs by multiplying them by a cross-paragraph-boundary weight w ∈ [0, 1].</S>\n    <S sid=\"112\" ssid=\"41\">For standard classifiers, we can employ the trick of having the detector treat paragraphs, rather than sentences, as the basic unit to be labeled.</S>\n    <S sid=\"113\" ssid=\"42\">This enables the standard classifier to utilize coherence between sentences in the same paragraph; on the other hand, it also (probably unavoidably) poses a hard constraint that all of a paragraph’s sentences get the same label, which increases noise sensitivity.14 Our experiments reveal the graph-cut formulation to be the better approach: for both default polarity classifiers (NB and SVM), some choice of parameters (including w) for ExtractSVM+Prox yields statistically significant improvement over its paragraphunit non-graph counterpart (NB: 86.4% vs. 85.2%; SVM: 86.15% vs. 85.45%).</S>\n  </SECTION>\n  <SECTION title=\"5 Conclusions\" number=\"5\">\n    <S sid=\"114\" ssid=\"1\">We examined the relation between subjectivity detection and polarity classification, showing that subjectivity detection can compress reviews into much shorter extracts that still retain polarity information at a level comparable to that of the full review.</S>\n    <S sid=\"115\" ssid=\"2\">In fact, for the Naive Bayes polarity classifier, the subjectivity extracts are shown to be more effective input than the originating document, which suggests that they are not only shorter, but also “cleaner” representations of the intended polarity.</S>\n    <S sid=\"116\" ssid=\"3\">We have also shown that employing the minimum-cut framework results in the development of efficient algorithms for sentiment analysis.</S>\n    <S sid=\"117\" ssid=\"4\">Utilizing contextual information via this framework can lead to statistically significant improvement in polarity-classification accuracy.</S>\n    <S sid=\"118\" ssid=\"5\">Directions for future research include developing parameterselection techniques, incorporating other sources of contextual cues besides sentence proximity, and investigating other means for modeling such information.</S>\n  </SECTION>\n  <SECTION title=\"Acknowledgments\" number=\"6\">\n    <S sid=\"119\" ssid=\"1\">We thank Eric Breck, Claire Cardie, Rich Caruana, Yejin Choi, Shimon Edelman, Thorsten Joachims, Jon Kleinberg, Oren Kurland, Art Munson, Vincent Ng, Fernando Pereira, Ves Stoyanov, Ramin Zabih, and the anonymous reviewers for helpful comments.</S>\n    <S sid=\"120\" ssid=\"2\">This paper is based upon work supported in part by the National Science Foundation under grants ITR/IM IIS-0081334 and IIS-0329064, a Cornell Graduate Fellowship in Cognitive Studies, and by an Alfred P. Sloan Research Fellowship.</S>\n    <S sid=\"121\" ssid=\"3\">Any opinions, findings, and conclusions or recommendations expressed above are those of the authors and do not necessarily reflect the views of the National Science Foundation or Sloan Foundation.</S>\n  </SECTION>\n</PAPER>"
}