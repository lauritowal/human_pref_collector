{
    "item_type": "paper",
    "title": "Parsing The Wall Street Journal Using A Lexical-Functional Grammar And Discriminative Estimation Techniques",
    "descriptions": [
        "This study presents a novel approach to parsing the Wall Street Journal using a Lexical-Functional Grammar (LFG) combined with discriminative estimation techniques. The authors address the limitation of grammar coverage by extending a full-fledged LFG and integrating partial parsing techniques to achieve 100% coverage on unseen data. To exploit the WSJ treebank for statistical estimation, the paper defines conditional criteria consistent with treebank annotations, allowing the use of partially labeled data for discriminative estimation of a probability model on linguistically fine-grained parses.\n\nThe paper demonstrates the effectiveness of this method by measuring the match of predicate-argument relations to a gold standard of manually annotated f-structures and dependency relations. The parser combined with the stochastic disambiguator yields an F-score of 79% on WSJ data and 76% on the Brown corpus test set.\n\nThe results suggest that while the symbolic grammar significantly restricts the range of possible analyses, the disambiguator effectively reduces the error rate. This system compares favorably to other stochastic parsing systems and improves parsing quality by incorporating robustness techniques such as fragment parsing and skimming to handle incomplete or problematic data. The paper concludes by discussing the implications of these findings and potential future improvements in stochastic parsing systems.",
        "**Abstract:**\n\nThis paper presents a novel approach to parsing the Wall Street Journal (WSJ) using a combination of a hand-coded Lexical-Functional Grammar (LFG) and discriminative estimation techniques. The authors address the challenge of achieving full grammar coverage by integrating full and partial parsing techniques, resulting in a system capable of analyzing all sentences, including those for which a complete parse is not available. To disambiguate parses, the study utilizes an exponential model estimated discriminatively from partially labeled data derived from the WSJ treebank annotations. The approach diverges from traditional methods by using discriminative criteria based on grammar parses consistent with treebank annotations rather than unsupervised or small hand-crafted training sets.\n\nEmpirical evaluation of the parsing system is conducted using a new metric that assesses the match of predicate-argument relations rather than the standard measure of labeled bracketing. The system achieves an F-score of 79% on the WSJ data and 76% on the Brown corpus under this evaluation. The results indicate that the system can significantly reduce the error rate relative to the upper bound (36%) and that the use of symbolic constraint-based grammars narrows the range of possible analyses for the disambiguator.\n\nThe paper concludes that the proposed approach is effective in scaling up fine-grained statistical parsing systems to handle large treebanks like the WSJ, and that it outperforms existing systems in evaluations that consider predicate-argument relations, achieving a slight improvement in overall F-score compared to other systems.",
        "Abstract:\n\nThis paper presents an innovative approach to scale up statistical parsing systems by integrating a hand-coded, linguistically fine-grained Lexical-Functional Grammar (LFG) with discriminative estimation techniques for parsing the Wall Street Journal (WSJ) treebank. The authors address the challenge of achieving full grammar coverage on free text by combining full and partial parsing techniques. They extend a robust LFG grammar and employ a constraint-based parser along with a \"FRAGMENT grammar\" to analyze input as well-formed chunks, achieving 100% coverage on unseen data. To optimize the use of the WSJ treebank for training, the authors develop a discriminative estimation method that uses partially labeled data to estimate a probability model on the fine-grained parses produced by the LFG grammar. The model employs exponential functions defined over a set of complex property-functions that incorporate c-structure, f-structure, and lexical information. \n\nEmpirical evaluations demonstrate the effectiveness of the system, with the parser plus stochastic disambiguator achieving an F-score of 79% when measured against predicate-argument relations in LFG f-structures and 76% when mapped to dependency relations. The paper discusses the importance of assessing the disambiguator's performance in terms of error rate reduction and shows that the system offers significant improvements over baseline models. The combined system's disambiguation performance indicates its potential for broader application, achieving comparable results to other systems evaluated on similar tasks.",
        "**Abstract:**\n\nThis paper addresses the challenge of scaling up stochastic parsing systems that employ linguistically fine-grained, hand-coded grammars to work with large corpora such as the UPenn Wall Street Journal (WSJ) treebank. The authors present a novel approach that integrates a Lexical-Functional Grammar (LFG) with a constraint-based parser and partial parsing techniques, ensuring 100% grammar coverage on unseen data. They introduce a \"FRAGMENT grammar\" to handle incomplete parses by analyzing input as sequences of well-formed chunks, selected based on a fewest-chunk method. For disambiguation, the paper employs discriminative estimation techniques using conditional exponential models, exploiting the WSJ treebank annotations to provide partially labeled data. The empirical evaluation of their system focuses on the quality of predicate-argument relations rather than standard labeled bracketing measures. The parser achieves an F-score of 79% on the WSJ data and 76% on the Brown corpus, using a gold standard for evaluation. The paper demonstrates that the combination of a symbolic grammar and a stochastic disambiguator can effectively reduce the error rate and improve parsing performance on large-scale data."
    ],
    "origin": "LLM",
    "llm_engine": "gpt-4-1106-preview",
    "generation_prompt_uid": "a49f7c8464fa4dabd1ada729b4d54294",
    "generation_prompt_nickname": "write_xml_paper_abstract",
    "generation_prompt_text": "Read the following academic paper (in XML format) and create an abstract for it.\n\n---\n\n**Description:**\n\n<PAPER>\n  <S sid=\"0\">Parsing The Wall Street Journal Using A Lexical-Functional Grammar And Discriminative Estimation Techniques</S>\n  <SECTION title=\"1 Introduction\" number=\"1\">\n    <S sid=\"8\" ssid=\"1\">Statistical parsing using combined systems of handcoded linguistically fine-grained grammars and stochastic disambiguation components has seen considerable progress in recent years.</S>\n    <S sid=\"9\" ssid=\"2\">However, such attempts have so far been confined to a relatively small scale for various reasons.</S>\n    <S sid=\"10\" ssid=\"3\">Firstly, the rudimentary character of functional annotations in standard treebanks has hindered the direct use of such data for statistical estimation of linguistically fine-grained statistical parsing systems.</S>\n    <S sid=\"11\" ssid=\"4\">Rather, parameter estimation for such models had to resort to unsupervised techniques (Bouma et al., 2000; Riezler et al., 2000), or training corpora tailored to the specific grammars had to be created by parsing and manual disambiguation, resulting in relatively small training sets of around 1,000 sentences (Johnson et al., 1999).</S>\n    <S sid=\"12\" ssid=\"5\">Furthermore, the effort involved in coding broadcoverage grammars by hand has often led to the specialization of grammars to relatively small domains, thus sacrificing grammar coverage (i.e. the percentage of sentences for which at least one analysis is found) on free text.</S>\n    <S sid=\"13\" ssid=\"6\">The approach presented in this paper is a first attempt to scale up stochastic parsing systems based on linguistically fine-grained handcoded grammars to the UPenn Wall Street Journal (henceforth WSJ) treebank (Marcus et al., 1994).</S>\n    <S sid=\"14\" ssid=\"7\">The problem of grammar coverage, i.e. the fact that not all sentences receive an analysis, is tackled in our approach by an extension of a fullfledged Lexical-Functional Grammar (LFG) and a constraint-based parser with partial parsing techniques.</S>\n    <S sid=\"15\" ssid=\"8\">In the absence of a complete parse, a socalled “FRAGMENT grammar” allows the input to be analyzed as a sequence of well-formed chunks.</S>\n    <S sid=\"16\" ssid=\"9\">The set of fragment parses is then chosen on the basis of a fewest-chunk method.</S>\n    <S sid=\"17\" ssid=\"10\">With this combination of full and partial parsing techniques we achieve 100% grammar coverage on unseen data.</S>\n    <S sid=\"18\" ssid=\"11\">Another goal of this work is the best possible exploitation of the WSJ treebank for discriminative estimation of an exponential model on LFG parses.</S>\n    <S sid=\"19\" ssid=\"12\">We define discriminative or conditional criteria with respect to the set of grammar parses consistent with the treebank annotations.</S>\n    <S sid=\"20\" ssid=\"13\">Such data can be gathered by applying labels and brackets taken from the treebank annotation to the parser input.</S>\n    <S sid=\"21\" ssid=\"14\">The rudimentary treebank annotations are thus used to provide partially labeled data for discriminative estimation of a probability model on linguistically fine-grained parses.</S>\n    <S sid=\"22\" ssid=\"15\">Concerning empirical evaluation of disambiguation performance, we feel that an evaluation measuring matches of predicate-argument relations is more appropriate for assessing the quality of our LFGbased system than the standard measure of matching labeled bracketing on section 23 of the WSJ treebank.</S>\n    <S sid=\"23\" ssid=\"16\">The first evaluation we present measures matches of predicate-argument relations in LFG fstructures (henceforth the LFG annotation scheme) to a gold standard of manually annotated f-structures for a representative subset of the WSJ treebank.</S>\n    <S sid=\"24\" ssid=\"17\">The evaluation measure counts the number of predicateargument relations in the f-structure of the parse selected by the stochastic model that match those in the gold standard annotation.</S>\n    <S sid=\"25\" ssid=\"18\">Our parser plus stochastic disambiguator achieves 79% F-score under this evaluation regime.</S>\n    <S sid=\"26\" ssid=\"19\">Furthermore, we employ another metric which maps predicate-argument relations in LFG fstructures to the dependency relations (henceforth the DR annotation scheme) proposed by Carroll et al. (1999).</S>\n    <S sid=\"27\" ssid=\"20\">Evaluation with this metric measures the matches of dependency relations to Carroll et al.’s gold standard corpus.</S>\n    <S sid=\"28\" ssid=\"21\">For a direct comparison of our results with Carroll et al.’s system, we computed an F-score that does not distinguish different types of dependency relations.</S>\n    <S sid=\"29\" ssid=\"22\">Under this measure we obtain 76% F-score.</S>\n    <S sid=\"30\" ssid=\"23\">This paper is organized as follows.</S>\n    <S sid=\"31\" ssid=\"24\">Section 2 describes the Lexical-Functional Grammar, the constraint-based parser, and the robustness techniques employed in this work.</S>\n    <S sid=\"32\" ssid=\"25\">In section 3 we present the details of the exponential model on LFG parses and the discriminative statistical estimation technique.</S>\n    <S sid=\"33\" ssid=\"26\">Experimental results are reported in section 4.</S>\n    <S sid=\"34\" ssid=\"27\">A discussion of results is in section 5.</S>\n  </SECTION>\n  <SECTION title=\"2 Robust Parsing using LFG\" number=\"2\">\n    <S sid=\"35\" ssid=\"1\">The grammar used for this project was developed in the ParGram project (Butt et al., 1999).</S>\n    <S sid=\"36\" ssid=\"2\">It uses LFG as a formalism, producing c(onstituent)-structures (trees) and f(unctional)-structures (attribute value matrices) as output.</S>\n    <S sid=\"37\" ssid=\"3\">The c-structures encode constituency.</S>\n    <S sid=\"38\" ssid=\"4\">F-structures encode predicate-argument relations and other grammatical information, e.g., number, tense.</S>\n    <S sid=\"39\" ssid=\"5\">The XLE parser (Maxwell and Kaplan, 1993) was used to produce packed representations, specifying all possible grammar analyses of the input.</S>\n    <S sid=\"40\" ssid=\"6\">The grammar has 314 rules with regular expression right-hand sides which compile into a collection of finite-state machines with a total of 8,759 states and 19,695 arcs.</S>\n    <S sid=\"41\" ssid=\"7\">The grammar uses several lexicons and two guessers: one guesser for words recognized by the morphological analyzer but not in the lexicons and one for those not recognized.</S>\n    <S sid=\"42\" ssid=\"8\">As such, most nouns, adjectives, and adverbs have no explicit lexical entry.</S>\n    <S sid=\"43\" ssid=\"9\">The main verb lexicon contains 9,652 verb stems and 23,525 subcategorization frame-verb stem entries; there are also lexicons for adjectives and nouns with subcategorization frames and for closed class items.</S>\n    <S sid=\"44\" ssid=\"10\">For estimation purposes using the WSJ treebank, the grammar was modified to parse part of speech tags and labeled bracketing.</S>\n    <S sid=\"45\" ssid=\"11\">A stripped down version of the WSJ treebank was created that used only those POS tags and labeled brackets relevant for determining grammatical relations.</S>\n    <S sid=\"46\" ssid=\"12\">The WSJ labeled brackets are given LFG lexical entries which constrain both the c-structure and the f-structure of the parse.</S>\n    <S sid=\"47\" ssid=\"13\">For example, the WSJ’s ADJP-PRD label must correspond to an AP in the c-structure and an XCOMP in the f-structure.</S>\n    <S sid=\"48\" ssid=\"14\">In this version of the corpus, all WSJ labels with -SBJ are retained and are restricted to phrases corresponding to SUBJ in the LFG grammar; in addition, it contains NP under VP (OBJ and OBJth in the LFG grammar), all -LGS tags (OBL-AG), all -PRD tags (XCOMP), VP under VP (XCOMP), SBAR- (COMP), and verb POS tags under VP (V in the c-structure).</S>\n    <S sid=\"49\" ssid=\"15\">For example, our labeled bracketing of wsj 1305.mrg is [NP-SBJHis credibility] is/VBZ also [PP-PRD on the line] in the investment community.</S>\n    <S sid=\"50\" ssid=\"16\">Some mismatches between the WSJ labeled bracketing and the LFG grammar remain.</S>\n    <S sid=\"51\" ssid=\"17\">These often arise when a given constituent fills a grammatical role in more than one clause.</S>\n    <S sid=\"52\" ssid=\"18\">For example, in wsj 1303.mrg Japan’s Daiwa Securities Co. named Masahiro Dozen president., the noun phrase Masahiro Dozen is labeled as an NP-SBJ.</S>\n    <S sid=\"53\" ssid=\"19\">However, the LFG grammar treats it as the OBJ of the matrix clause.</S>\n    <S sid=\"54\" ssid=\"20\">As a result, the labeled bracketed version of this sentence does not receive a full parse, even though its unlabeled, string-only counterpart is wellformed.</S>\n    <S sid=\"55\" ssid=\"21\">Some other bracketing mismatches remain, usually the result of adjunct attachment.</S>\n    <S sid=\"56\" ssid=\"22\">Such mismatches occur in part because, besides minor modifications to match the bracketing for special constructions, e.g., negated infinitives, the grammar was not altered to mirror the idiosyncrasies of the WSJ bracketing.</S>\n    <S sid=\"57\" ssid=\"23\">To increase robustness, the standard grammar has been augmented with a FRAGMENT grammar.</S>\n    <S sid=\"58\" ssid=\"24\">This grammar parses the sentence as well-formed chunks specified by the grammar, in particular as Ss, NPs, PPs, and VPs.</S>\n    <S sid=\"59\" ssid=\"25\">These chunks have both c-structures and f-structures corresponding to them.</S>\n    <S sid=\"60\" ssid=\"26\">Any token that cannot be parsed as one of these chunks is parsed as a TOKEN chunk.</S>\n    <S sid=\"61\" ssid=\"27\">The TOKENs are also recorded in the c- and f-structures.</S>\n    <S sid=\"62\" ssid=\"28\">The grammar has a fewest-chunk method for determining the correct parse.</S>\n    <S sid=\"63\" ssid=\"29\">For example, if a string can be parsed as two NPs and a VP or as one NP and an S, the NP-S option is chosen.</S>\n    <S sid=\"64\" ssid=\"30\">A sample FRAGMENT c-structure and f-structure are shown in Fig.</S>\n    <S sid=\"65\" ssid=\"31\">1 for wsj 0231.mrg (The golden share was scheduled to expire at the beginning of), an incomplete sentence; the parser builds one S chunk and then one TOKEN for the stranded preposition.</S>\n    <S sid=\"66\" ssid=\"32\">A final capability of XLE that increases coverage of the standard-plus-fragment grammar is a SKIMMING technique.</S>\n    <S sid=\"67\" ssid=\"33\">Skimming is used to avoid timeouts and memory problems.</S>\n    <S sid=\"68\" ssid=\"34\">When the amount of time or memory spent on a sentence exceeds a threshhold, XLE goes into skimming mode for the constituents whose processing has not been completed.</S>\n    <S sid=\"69\" ssid=\"35\">When XLE skims these remaining constituents, it does a bounded amount of work per subtree.</S>\n    <S sid=\"70\" ssid=\"36\">This guarantees that XLE finishes processing a sentence in a polynomial amount of time.</S>\n    <S sid=\"71\" ssid=\"37\">In parsing section 23, 7.2% of the sentences were skimmed; 26.1% of these resulted in full parses, while 73.9% were FRAGMENT parses.</S>\n    <S sid=\"72\" ssid=\"38\">The grammar coverage achieved 100% of section 23 as unseen unlabeled data: 74.7% as full parses, 25.3% FRAGMENT and/or SKIMMED parses.</S>\n  </SECTION>\n  <SECTION title=\"3 Discriminative Statistical Estimation from Partially Labeled Data\" number=\"3\">\n    <S sid=\"73\" ssid=\"1\">We employed the well-known family of exponential models for stochastic disambiguation.</S>\n    <S sid=\"74\" ssid=\"2\">In this paper we are concerned with conditional exponential models of the form: where X(y) is the set of parses for sentence y, Zλ(y) = PxEX(y) eλ'f(x) is a normalizing constant, λ = (λ1, ... , λn) E IRn is a vector of log-parameters, f = (f1, ... , fn) is a vector of property-functions fi : X IR for i = 1, ... , n on the set of parses X, and λ f(x) is the vector dot product Pni=1 λifi(x).</S>\n    <S sid=\"75\" ssid=\"3\">In our experiments, we used around 1000 complex property-functions comprising information about c-structure, f-structure, and lexical elements in parses, similar to the properties used in Johnson et al. (1999).</S>\n    <S sid=\"76\" ssid=\"4\">For example, there are property functions for c-structure nodes and c-structure subtrees, indicating attachment preferences.</S>\n    <S sid=\"77\" ssid=\"5\">High versus low attachment is indicated by property functions counting the number of recursively embedded phrases.</S>\n    <S sid=\"78\" ssid=\"6\">Other property functions are designed to refer to f-structure attributes, which correspond to grammatical functions in LFG, or to atomic attributevalue pairs in f-structures.</S>\n    <S sid=\"79\" ssid=\"7\">More complex property functions are designed to indicate, for example, the branching behaviour of c-structures and the (non)parallelism of coordinations on both c-structure and f-structure levels.</S>\n    <S sid=\"80\" ssid=\"8\">Furthermore, properties refering to lexical elements based on an auxiliary distribution approach as presented in Riezler et al. (2000) are included in the model.</S>\n    <S sid=\"81\" ssid=\"9\">Here tuples of head words, argument words, and grammatical relations are extracted from the training sections of the WSJ, and fed into a finite mixture model for clustering grammatical relations.</S>\n    <S sid=\"82\" ssid=\"10\">The clustering model itself is then used to yield smoothed probabilities as values for property functions on head-argument-relation tuples of LFG parses.</S>\n    <S sid=\"83\" ssid=\"11\">Discriminative estimation techniques have recently received great attention in the statistical machine learning community and have already been applied to statistical parsing (Johnson et al., 1999; Collins, 2000; Collins and Duffy, 2001).</S>\n    <S sid=\"84\" ssid=\"12\">In discriminative estimation, only the conditional relation of an analysis given an example is considered relevant, whereas in maximum likelihood estimation the joint probability of the training data to best describe observations is maximized.</S>\n    <S sid=\"85\" ssid=\"13\">Since the discriminative task is kept in mind during estimation, discriminative methods can yield improved performance.</S>\n    <S sid=\"86\" ssid=\"14\">In our case, discriminative criteria cannot be defined directly with respect to “correct labels” or “gold standard” parses since the WSJ annotations are not sufficient to disambiguate the more complex LFG parses.</S>\n    <S sid=\"87\" ssid=\"15\">However, instead of retreating to unsupervised estimation techniques or creating small LFG treebanks by hand, we use the labeled bracketing of the WSJ training sections to guide discriminative estimation.</S>\n    <S sid=\"88\" ssid=\"16\">That is, discriminative criteria are defined with respect to the set ofparses consistent with the WSJ annotations.1 The objective function in our approach, denoted by P(λ), is the joint of the negative log-likelihood −L(λ) and a Gaussian regularization term −G(λ) on the parameters λ.</S>\n    <S sid=\"89\" ssid=\"17\">Let {(yj, zj)Imj=1 be a set of training data, consisting of pairs of sentences y and partial annotations z, let X(y, z) be the set of parses for sentence y consistent with annotation z, and let X(y) be the set of all parses produced by the grammar for sentence y.</S>\n    <S sid=\"90\" ssid=\"18\">Furthermore, let p[f] denote the expectation of function f under distribution p. Then P(λ) can be defined for a conditional exponential model pλ(zIy) as: Intuitively, the goal of estimation is to find model pa'An earlier approach using partially labeled data for estimating stochastics parsers is Pereira and Schabes’s (1992) work on training PCFG from partially bracketed data.</S>\n    <S sid=\"91\" ssid=\"19\">Their approach differs from the one we use here in that Pereira and Schabes take an EM-based approach maximizing the joint likelihood of the parses and strings of their training data, while we maximize the conditional likelihood of the sets of parses given the corresponding strings in a discriminative estimation setting. rameters which make the two expectations in the last equation equal, i.e. which adjust the model parameters to put all the weight on the parses consistent with the annotations, modulo a penalty term from the Gaussian prior for too large or too small weights.</S>\n    <S sid=\"92\" ssid=\"20\">Since a closed form solution for such parameters is not available, numerical optimization methods have to be used.</S>\n    <S sid=\"93\" ssid=\"21\">In our experiments, we applied a conjugate gradient routine, yielding a fast converging optimization algorithm where at each iteration the negative log-likelihood P(λ) and the gradient vector have to be evaluated.2 For our task the gradient takes the form: The derivatives in the gradient vector intuitively are again just a difference of two expectations Note also that this expression shares many common terms with the likelihood function, suggesting an efficient implementation of the optimization routine.</S>\n  </SECTION>\n  <SECTION title=\"4 Experimental Evaluation\" number=\"4\">\n    <S sid=\"94\" ssid=\"1\">The basic training data for our experiments are sections 02-21 of the WSJ treebank.</S>\n    <S sid=\"95\" ssid=\"2\">As a first step, all sections were parsed, and the packed parse forests unpacked and stored.</S>\n    <S sid=\"96\" ssid=\"3\">For discriminative estimation, this data set was restricted to sentences which receive a full parse (in contrast to a FRAGMENT or SKIMMED parse) for both its partially labeled and its unlabeled variant.</S>\n    <S sid=\"97\" ssid=\"4\">Furthermore, only sentences 2An alternative numerical method would be a combination of iterative scaling techniques with a conditional EM algorithm (Jebara and Pentland, 1998).</S>\n    <S sid=\"98\" ssid=\"5\">However, it has been shown experimentally that conjugate gradient techniques can outperform iterative scaling techniques by far in running time (Minka, 2001). which received at most 1,000 parses were used.</S>\n    <S sid=\"99\" ssid=\"6\">From this set, sentences of which a discriminative learner cannot possibly take advantage, i.e. sentences where the set of parses assigned to the partially labeled string was not a proper subset of the parses assigned the unlabeled string, were removed.</S>\n    <S sid=\"100\" ssid=\"7\">These successive selection steps resulted in a final training set consisting of 10,000 sentences, each with parses for partially labeled and unlabeled versions.</S>\n    <S sid=\"101\" ssid=\"8\">Altogether there were 150,000 parses for partially labeled input and 500,000 for unlabeled input.</S>\n    <S sid=\"102\" ssid=\"9\">For estimation, a simple property selection procedure was applied to the full set of around 1000 properties.</S>\n    <S sid=\"103\" ssid=\"10\">This procedure is based on a frequency cutoff on instantiations of properties for the parses in the labeled training set.</S>\n    <S sid=\"104\" ssid=\"11\">The result of this procedure is a reduction of the property vector to about half its size.</S>\n    <S sid=\"105\" ssid=\"12\">Furthermore, a held-out data set was created from section 24 of the WSJ treebank for experimental selection of the variance parameter of the prior distribution.</S>\n    <S sid=\"106\" ssid=\"13\">This set consists of 120 sentences which received only full parses, out of which the most plausible one was selected manually.</S>\n    <S sid=\"107\" ssid=\"14\">Two different sets of test data were used: (i) 700 sentences randomly extracted from section 23 of the WSJ treebank and given gold-standard f-structure annotations according to our LFG scheme, and (ii) 500 sentences from the Brown corpus given gold standard annotations by Carroll et al. (1999) according to their dependency relations (DR) scheme.3 Annotating the WSJ test set was bootstrapped by parsing the test sentences using the LFG grammar and also checking for consistency with the Penn Treebank annotation.</S>\n    <S sid=\"108\" ssid=\"15\">Starting from the (sometimes fragmentary) parser analyses and the Treebank annotations, gold standard parses were created by manual corrections and extensions of the LFG parses.</S>\n    <S sid=\"109\" ssid=\"16\">Manual corrections were necessary in about half of the cases.</S>\n    <S sid=\"110\" ssid=\"17\">The average sentence length of the WSJ f-structure bank is 19.8 words; the average number of predicate-argument relations in the goldstandard f-structures is 31.2.</S>\n    <S sid=\"111\" ssid=\"18\">Performance on the LFG-annotated WSJ test set was measured using both the LFG and DR metrics, thanks to an f-structure-to-DR annotation mapping.</S>\n    <S sid=\"112\" ssid=\"19\">Performance on the DR-annotated Brown test set was only measured using the DR metric.</S>\n    <S sid=\"113\" ssid=\"20\">The LFG evaluation metric is based on the comparison of full f-structures, represented as triples relation(predicate, argument).</S>\n    <S sid=\"114\" ssid=\"21\">The predicateargument relations of the f-structure for one parse of the sentence Meridian will pay a premium of $30.5 million to assume $2 billion in deposits. are shown in Fig.</S>\n    <S sid=\"115\" ssid=\"22\">2.</S>\n    <S sid=\"116\" ssid=\"23\">The DR annotation for our example sentence, obtained via a mapping from f-structures to Carroll et al’s annotation scheme, is shown in Fig.</S>\n    <S sid=\"117\" ssid=\"24\">3.</S>\n    <S sid=\"118\" ssid=\"25\">Superficially, the LFG and DR representations are very similar.</S>\n    <S sid=\"119\" ssid=\"26\">One difference between the annotation schemes is that the LFG representation in general specifies more relation tuples than the DR representation.</S>\n    <S sid=\"120\" ssid=\"27\">Also, multiple occurences of the same lexical item are indicated explicitly in the LFG representation but not in the DR representation.</S>\n    <S sid=\"121\" ssid=\"28\">The main conceptual difference between the two annotation schemes is the fact that the DR scheme crucially refers to phrase-structure properties and word order as well as to grammatical relations in the definition of dependency relations, whereas the LFG scheme abstracts away from serialization and phrase-structure.</S>\n    <S sid=\"122\" ssid=\"29\">Facts like this can make a correct mapping of LFG f-structures to DR relations problematic.</S>\n    <S sid=\"123\" ssid=\"30\">Indeed, we believe that we still underestimate by a few points because of DR mapping difficulties.</S>\n    <S sid=\"124\" ssid=\"31\">4 In our evaluation, we report F-scores for both types of annotation, LFG and DR, and for three types of parse selection, (i) lower bound: random choice of a parse from the set of analyses (averaged over 10 runs), (ii) upper bound: selection of the parse with the best F-score according to the annotation scheme used, and (iii) stochastic: the parse selected by the stochastic disambiguator.</S>\n    <S sid=\"125\" ssid=\"32\">The error reduction row lists the reduction in error rate relative to the upper and lower bounds obtained by the stochastic disambiguation model.</S>\n    <S sid=\"126\" ssid=\"33\">F-score is defined as 2 × precision × recall/(precision + recall).</S>\n    <S sid=\"127\" ssid=\"34\">The effect of the quality of the parses on disambiguation performance can be illustrated by breaking down the F-scores according to whether the parser yields full parses, FRAGMENT, SKIMMED, or SKIMMED+FRAGMENT parses for the test sentences.</S>\n    <S sid=\"128\" ssid=\"35\">The percentages of test examples which belong to the respective classes of quality are listed in the first row of Table 2.</S>\n    <S sid=\"129\" ssid=\"36\">F-scores broken down according to classes of parse quality are recorded in the following rows.</S>\n    <S sid=\"130\" ssid=\"37\">The first column shows F-scores for all parses in the test set, as in Table 1.</S>\n    <S sid=\"131\" ssid=\"38\">The second column shows the best F-scores when restricting attention to examples which receive only full parses.</S>\n    <S sid=\"132\" ssid=\"39\">The third column reports F-scores for examples which receive only non-full parses, i.e.</S>\n    <S sid=\"133\" ssid=\"40\">FRAGMENT or SKIMMED parses or SKIMMED+FRAGMENT parses.</S>\n    <S sid=\"134\" ssid=\"41\">Columns 4-6 break down non-full parses according to examples which receive only FRAGMENT, only SKIMMED, or only SKIMMED+FRAGMENT parses.</S>\n    <S sid=\"135\" ssid=\"42\">Results of the evaluation on Carroll et al.’s Brown test set are given in Table 3.</S>\n    <S sid=\"136\" ssid=\"43\">Evaluation results for the DR measure applied to the Brown corpus test set broken down according to parse-quality are shown in Table 2.</S>\n    <S sid=\"137\" ssid=\"44\">In Table 3 we show the DR measure along with an evaluation measure which facilitates a direct comparison of our results to those of Carroll et al. (1999).</S>\n    <S sid=\"138\" ssid=\"45\">Following Carroll et al. (1999), we count a dependency relation as correct if the gold standard has a relation with the same governor and dependent but perhaps with a different relation-type.</S>\n    <S sid=\"139\" ssid=\"46\">This dependency-only (DO) measure thus does not reflect mismatches between arguments and modifiers in a small number of cases.</S>\n    <S sid=\"140\" ssid=\"47\">Note that since for the evaluation on the Brown corpus, no heldout data were available to adjust the variance parameter of a Bayesian model, we used a plain maximumlikelihood model for disambiguation on this test set.</S>\n  </SECTION>\n  <SECTION title=\"5 Discussion\" number=\"5\">\n    <S sid=\"141\" ssid=\"1\">We have presented a first attempt at scaling up a stochastic parsing system combining a hand-coded linguistically fine-grained grammar and a stochastic disambiguation model to the WSJ treebank.</S>\n    <S sid=\"142\" ssid=\"2\">Full grammar coverage is achieved by combining specialized constraint-based parsing techniques for LFG grammars with partial parsing techniques.</S>\n    <S sid=\"143\" ssid=\"3\">Furthermore, a maximal exploitation of treebank annotations for estimating a distribution on fine-grained LFG parses is achieved by letting grammar analyses which are consistent with the WSJ labeled bracketing define a gold standard set for discriminative estimation.</S>\n    <S sid=\"144\" ssid=\"4\">The combined system trained on WSJ data achieves full grammar coverage and disambiguation performance of 79% F-score on WSJ data, and 76% F-score on the Brown corpus test set.</S>\n    <S sid=\"145\" ssid=\"5\">While disambiguation performance of around 79% F-score on WSJ data seems promising, from one perspective it only offers a 3% absolute improvement over a lower bound random baseline.</S>\n    <S sid=\"146\" ssid=\"6\">We think that the high lower bound measure highlights an important aspect of symbolic constraintbased grammars (in contrast to treebank grammars): the symbolic grammar already significantly restricts/disambiguates the range of possible analyses, giving the disambiguator a much narrower window in which to operate.</S>\n    <S sid=\"147\" ssid=\"7\">As such, it is more appropriate to assess the disambiguator in terms of reduction in error rate (36% relative to the upper bound) than in terms of absolute F-score.</S>\n    <S sid=\"148\" ssid=\"8\">Both the DR and LFG annotations broadly agree in their measure of error reduction.</S>\n    <S sid=\"149\" ssid=\"9\">The lower reduction in error rate relative to the upper bound for DR evaluation on the Brown corpus can be attributed to a corpus effect that has also been observed by Gildea (2001) for training and testing PCFGs on the WSJ and Brown corpora.5 Breaking down results according to parse quality shows that irrespective of evaluation measure and corpus, around 4% overall performance is lost due to non-full parses, i.e.</S>\n    <S sid=\"150\" ssid=\"10\">FRAGMENT, or SKIMMED, or SKIMMED+FRAGMENT parses.</S>\n    <S sid=\"151\" ssid=\"11\">Due to the lack of standard evaluation measures and gold standards for predicate-argument matching, a comparison of our results to other stochastic parsing systems is difficult.</S>\n    <S sid=\"152\" ssid=\"12\">To our knowledge, so far the only direct point of comparison is the parser of Carroll et al. (1999) which is also evaluated on Carroll et al.’s test corpus.</S>\n    <S sid=\"153\" ssid=\"13\">They report an F-score of 75.1% for a DO evaluation that ignores predicate labels, counting only dependencies.</S>\n    <S sid=\"154\" ssid=\"14\">Under this measure, our system achieves 76.1% F-score.</S>\n  </SECTION>\n</PAPER>"
}